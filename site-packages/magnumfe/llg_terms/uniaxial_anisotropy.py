# Copyright (C) 2011-2015 Claas Abert
#
# This file is part of magnum.fe. 
#
# magnum.fe is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# magnum.fe is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with magnum.fe. If not, see <http://www.gnu.org/licenses/>.
# 
# Last modified by Claas Abert, 2015-01-05

from __future__ import absolute_import 

from dolfin import *
from magnumfe.llg_terms import LLGTerm
from magnumfe.constants import Constants

__all__ = ["UniaxialAnisotropyField"]

class UniaxialAnisotropyField(LLGTerm):

  def __init__(self):
    """
    This class represents an uniaxial anisotropy field.

    *Required material parameters*
      K_uni
        Anisotropy constant
      K_uni_axis
        Anisotropy axis, e.g. (1.0, 0.0, 0.0)
    """
    pass

  def form_term_rhs(self, state, w):
    mat = state.material
    f = Constant(Constants.gamma * 2.0 / Constants.mu0) * mat.K_uni / mat.ms

    return f * inner(mat.K_uni_axis, state.m) * inner(mat.K_uni_axis, w)
