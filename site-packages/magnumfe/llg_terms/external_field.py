# Copyright (C) 2011-2014 Claas Abert
#
# This file is part of magnum.fe. 
#
# magnum.fe is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# magnum.fe is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with magnum.fe. If not, see <http://www.gnu.org/licenses/>.
# 
# First added:  2012-11-30
# Last changed: 2012-11-30

from __future__ import absolute_import 

from dolfin import *
from magnumfe.llg_terms import LLGTerm
from magnumfe.constants import Constants

__all__ = ["ExternalField"]

class ExternalField(LLGTerm):
  """
  This class represents a constant external field.
  """

  def __init__(self, field = Constant((0.0, 0.0, 0.0))):
    """
    Create a _ExternalField_ object.

    *Arguments*
        field
            The external field (Constant, Function or Expression)
    """
    self.set(field)

  def set(self, field):
    if isinstance(field, Constant):
      self._field = field
    else:
      self._field = Constant(field)

  def form_term_rhs(self, state, w):
    return Constant(Constants.gamma) * inner(self._field, w)

