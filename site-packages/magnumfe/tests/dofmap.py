from magnumfe import *
from dolfin import *

mesh = UnitCube(1, 1, 1)
VS = FunctionSpace(mesh, "CG", 1)
VV = VectorFunctionSpace(mesh, "CG", 1)

a = interpolate(Constant((2, 3, 4)), VV)
b = interpolate(Constant((1, 2, 3)), VV).vector()

test = ScalarProductMatrix(VS, VV, a)
A = DofAssembler.assemble(test)

a = interpolate(Constant((2, 3, 4)), VV).vector()
b = interpolate(Constant((1, 2, 3)), VV).vector()


print A.array()
print (A*b).array()

#print "OANS"
#DofAssembler.printMapping(VV.sub(1), VS)
#DofAssembler.printMapping(VV.sub(0), VV.sub(0))
#print "DREI"
#DofAssembler.printMapping(VS, VS)


