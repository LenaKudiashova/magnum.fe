from __future__ import absolute_import 
import magnumfe.cpp as cpp
from dolfin import Matrix, Vector

__all__ = ["DofAssembler", "ScalarProductMatrix", "ScalarProductMatrix2", "TransScalarProductMatrix", "NormalizedVector"]

class DofAssembler(cpp.DofAssembler):
  @staticmethod
  def assemble(a, reset_sparsity=True):
    A = 0
    if a.rank() == 2:
      A = Matrix()
    elif a.rank() == 1:
      A = Vector()

    cpp.DofAssembler.assemble(A, a, reset_sparsity)
    return A

class ScalarProductMatrix(cpp.ScalarProductMatrix):
  pass

class ScalarProductMatrix2(cpp.ScalarProductMatrix2):
  pass

class TransScalarProductMatrix(cpp.TransScalarProductMatrix):
  pass

class NormalizedVector(cpp.NormalizedVector):
  pass
