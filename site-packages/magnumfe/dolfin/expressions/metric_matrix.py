from __future__ import absolute_import 
from dolfin import Expression
import os
import numpy
from ufl import TensorElement

__all__ = ["MetricMatrix"]

class MetricMatrix():

  @staticmethod
  def create_for_cube(size, coord, order=1):
    # Read cpp implementation from file
    filename = "%s/metric_matrix_cube_%d.cpp" % (os.path.dirname(__file__), order)
    code = open(filename, 'r').read()

    # Create Quadrature Element
    element = TensorElement("Quadrature", "tetrahedron", 5)

    # Initialize expression and set size and coord
    g = Expression(code, element=element)
    g.size_x = size[0]
    g.size_y = size[1]
    g.size_z = size[2]
    g.coord  = coord

    return g
