"""This module defines a material class for micromagnetic problems."""

# Copyright (C) 2011-2012 Claas Abert
#
# This file is part of magnum.fe. 
#
# magnum.fe is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# magnum.fe is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License for more details.
# 
# You should have received a copy of the GNU Lesser General Public License
# along with magnum.fe. If not, see <http://www.gnu.org/licenses/>.
# 
# First added:  2012-11-30
# Last changed: 2012-11-30

from __future__ import absolute_import 

__all__ = ["Material"]

class Material:
  """
  This class defines a material with micromagnetic properties.
  """

  def __init__(self, **kwargs):
    """
    Create a material.

    *Arguments*
        Aex
            The exchange constant.
        alpha
            The damping.
        ms
            The saturation magnetization.
    """

    self.Aex   = kwargs.pop('Aex', 0.0)
    self.alpha = kwargs.pop('alpha', 0.0)
    self.ms    = kwargs.pop('ms', 0.0)

    for key, value in kwargs.iteritems():
      setattr(self, key, value)

  @staticmethod
  def py():
    """
    Return an instance of Material with the material properties
    similar to Permalloy."""
    return Material(alpha=0.02, Aex=13e-12, ms=8e5)
